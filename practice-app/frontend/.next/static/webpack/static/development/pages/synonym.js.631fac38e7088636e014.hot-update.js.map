{"version":3,"file":"static/webpack/static/development/pages/synonym.js.631fac38e7088636e014.hot-update.js","sources":["webpack:///./pages/synonym.js"],"sourcesContent":["import React, { Component } from 'react'\n\nimport axios from \"axios\";\n\nimport Layout from '../components/MyLayout.js';\nimport Word from '../components/Word.js';\n\nconst Constants = require('../Constants');\n\nexport default class Synonym extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      word: '',\n      data: []\n    };\n  }\n\n  _handleChange = (event) => {\n    this.setState({word: event.target.value});\n  }\n\n  async getSynonyms(word){\n    if(!word || word == \"\") return;\n    var url = new URL(Constants.API_URL+'synonym');\n    url.searchParams.append('word', word);\n    const response = await axios.post(url);\n    if(response.status == 200){\n      if(response.data.synonyms){\n        alert(JSON.stringify(response.data.synonyms.map(word=>{text:word})))\n        this.setState({\n          data: response.data.synonyms.map(word=>{text:word})\n        })\n      }else{\n        alert(\"word not found\");\n      }\n    }else{\n      alert(\"error\")\n    }\n  }\n\n  _handleSubmit = async(event) => {\n    //stops submitting the form\n    event.preventDefault();\n    await this.getSynonyms(this.state.word);\n  }\n\n  render(){\n    let {data} = this.state;\n    return (\n      <Layout>\n        <p>Synonym</p>\n        <form onSubmit={this._handleSubmit}>\n          <label>\n            Word:\n            <input type=\"text\" value={this.state.value} onChange={this._handleChange} />\n          </label>\n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n        {data.map(word=><Word {...word}/>)}\n      </Layout>\n    )\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AASA;AAAA;AAAA;AACA;AACA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AA+BA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAhCA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAFA;AAMA;AACA;;;;;;AAKA;;;;;;AACA;;;;;;;;AACA;AACA;;AACA;AACA;;AADA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AAQA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AAtDA;AACA;;;;;A","sourceRoot":""}